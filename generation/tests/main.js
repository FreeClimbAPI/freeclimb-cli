/**
 * This file creates, or overrides, the test directory containing files
 * which are used to test command files for the CLI. For each command file,
 * this file composes a typescript file with tests from data-tests.js and
 * status-test.js. main.js is not a part of the CLI but rather a necessary
 * component for generating test files. Changes made to this file may affect
 * generated test files.
 */
import * as fs from 'fs';
import {exec} from "child_process";
//import {parseCommandLine} from "typescript";
import {Tests} from "./cases.js"
import apiInfo from "../schema/generated-api-schema.js"


// Create src/commands if directory does not already exist
fs.mkdirSync("./test/commands", { recursive: true })

let generatedFiles = []

// Create directories and files in /commands
apiInfo.forEach((topic) => {
    const path = `./test/commands`

    topic.commands.forEach((command) => {
        let data = getData(topic, command)
        let newFilepath = `${path}/${topic.topic.replace(" ", "_")}-${command.commandName}.test.ts`
        fs.writeFileSync(newFilepath, data)
        generatedFiles.push(newFilepath)
    })
})

exec(
    `git add ${generatedFiles.join(
        " "
    )} && yarn lint-staged --allow-empty; git restore --staged ${generatedFiles.join(" ")}`,
    (err, stdout, stderr) => {
        // Stages to allow lint and then unstages
        if (err) {
            console.log("Linter errors were found.")
        }
        console.log(`stdout: ${stdout}`)
        console.log(`stderr: ${stderr}`)
    }
)

function getData(topic, command) {
    // creates new intance of a test
    const commandName = `${topic.topic}:${command.commandName}`

    let data = `
/* WARNING: This file is automatically generated. Please edit the files in the /generation/tests directory. */
import { expect, test } from "@oclif/test"
import { cred } from "../../src/credentials"

${tests(topic, command, commandName)}\n
`
    return data
}

function tests(topic, command, commandName) {
    const tests = new Tests(topic, command, commandName)
    return tests.runTests()
}
